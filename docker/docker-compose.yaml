---
version: "3.4"
# Base service; for extension only, not for direct use
x-service-base: &service_base
  image: "${DOCKER_REPOSITORY-ghcr.io/uwcirg/}${DOCKER_IMAGE_NAME:-truenth-portal}:${DOCKER_IMAGE_TAG:-develop}"
  build:
    context: ..
    dockerfile: docker/Dockerfile
    target: production
  env_file:
    - ${PORTAL_ENV_FILE:-portal.env}
  environment:
    # cross-service defaults
    PGDATABASE: portaldb
    PGHOST: db
    PGPASSWORD: wplatrop
    PGUSER: postgres
    REDIS_URL: redis://redis:6379/0

services:
  web:
    <<: *service_base
    # TODO remove `ports` section
    # NB `ports` now has its own override: docker-compose.static-ingress.yaml
    ports:
      - target: ${PORT:-8008}
        published: ${EXTERNAL_PORT:-8080}
    depends_on:
      - db
      - redis
      - celeryworker
      - celeryworkerslow
      - celerybeat
      - sdc
    volumes:
      - source: user-documents
        target: ${FILE_UPLOAD_DIR:-/var/lib/portal/uploads}
        type: volume
      - source: tmp-persistence-data
        target: ${PERSISTENCE_EXCLUSIONS_DIR:-/var/tmp/exclusions}
        type: volume

  celeryworker:
    <<: *service_base
    command: sh -c '
      flask generate-site-cfg &&
      celery
        --app portal.celery_worker.celery
      worker
        --loglevel debug
      '
    depends_on:
      - redis

  celeryworkerslow:
    <<: *service_base
    command: sh -c '
      flask generate-site-cfg &&
      celery
        --app portal.celery_worker.celery
      worker
        --queues low_priority
        --loglevel debug
      '
    depends_on:
      - redis

  celerybeat:
    <<: *service_base
    command: bash -c '
      (wait-for-it --host=redis --port=6379 --strict -- flask set-celery-beat-healthy) &
      wait-for-it --timeout=120 --host=web --port=$$PORT --strict --
        celery
          --app portal.celery_worker.celery
        beat
          --loglevel debug
          --schedule /tmp/celerybeat-schedule.db
          --pidfile /tmp/celerybeat.pid
      '
    depends_on:
      - celeryworker
      - celeryworkerslow

  sdc:
    image: ghcr.io/uwcirg/sdc-services:latest

  redis:
    image: redis

  db:
    image: postgres:${POSTGRES_VERSION:-16}
    environment:
      # use generic postgres env vars to configure env vars specific to dockerized postgres
      POSTGRES_DB: ${PGDATABASE:-portaldb}
      POSTGRES_PASSWORD: ${PGPASSWORD:-wplatrop}
    volumes:
      - source: postgres-data
        target: /var/lib/postgresql/data
        type: volume

volumes:
    postgres-data: {}
    user-documents: {}
    tmp-persistence-data: {}
